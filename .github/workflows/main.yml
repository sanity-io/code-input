name: CI & Release
on:
  push:
  workflow_dispatch:
    inputs:
      release:
        description: 'Release new version'
        required: true
        default: false
        type: boolean

jobs:
  log-the-inputs:
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "Release new version: $RELEASE"
        env:
          RELEASE: ${{ inputs.release }}

  build:
    name: 'Lint & Build'
    runs-on: ubuntu-latest
    steps:
      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: 'npm'
      - run: npm ci
      - run: npm run lint --if-present
      - run: npm run prepublishOnly --if-present

  test:
    name: 'Test'
    needs: build
    strategy:
      matrix:
        node-version: [16.x, 18.x]
        platform: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - run: npm test

  release:
    name: 'Semantic release'
    needs: test
    runs-on: ubuntu-latest
    if: inputs.release == true
    steps:
      - uses: actions/checkout@v3
        with:
          # Need to fetch entire commit history to
          # analyze every commit since last release
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: 'npm'
      - run: npm ci
      # Branches that will release new versions are defined in .releaserc.json
      - run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
